
dependencies {
    compile project(':seisFile') {
        transitive = true
    }

}

group = 'edu.sc.seis'
version = '1.2beta4'

artifacts {
    archives jar
}

task tarDist(type: Tar, dependsOn: ['makeScript', 'genModels', 'createBuildScript', 'wrapper']) {
    dirName = project.name+'-'+version
    tarFileSet(dir: 'build') {
        include('build.gradle')
        prefix = dirName
    }
    tarFileSet(dir: 'build/output',fileMode: '755') {
        include('bin/**')
        prefix = dirName
    }
    tarFileSet(dir: 'build/output') {
        include('lib/**')
        prefix = dirName
    }
    tarFileSet(dir: 'build/docs') {
        include('javadoc/**')
        prefix = dirName
    }
    tarFileSet(dir: '.') {
        include('gpl-3.0.txt')
        include('Maple/*')
        include('Notes/History')
        include('defaultProps')
        include('doc/**')
        include('exampleProperties')
        include('jacl/**')
        include('native/**')
        include('src/**')
        include('srl/*.pdf')
        include('gradleWrapper/**')
        include('gradlew')
        include('gradlew.bat')
        exclude('**/*.svn')
        prefix = dirName
    }
}

task makeScript(dependsOn: copyToLib) << { task ->
    scriptBuild('taup_time', 'edu.sc.seis.TauP.TauP_Time', task.project)
    scriptBuild('taup_pierce', 'edu.sc.seis.TauP.TauP_Pierce', task.project)
    scriptBuild('taup_path', 'edu.sc.seis.TauP.TauP_Path', task.project)
    scriptBuild('taup_create', 'edu.sc.seis.TauP.TauP_Create', task.project)
    scriptBuild('taup_curve', 'edu.sc.seis.TauP.TauP_Curve', task.project)
    scriptBuild('taup_setsac', 'edu.sc.seis.TauP.TauP_SetSac', task.project)
    scriptBuild('taup_table', 'edu.sc.seis.TauP.TauP_Table', task.project)
    scriptBuild('taup', 'edu.sc.seis.TauP.TauP', task.project)
}


task genModels(dependsOn: compileJava) << {
    println "Generate models"
    def dir = 'src/main/resources/edu/sc/seis/TauP/StdModels/'
    String[] tvelModelNames = ['iasp91', 'ak135']
    String[] ndModelNames = ['prem']
    def classLoader = new GroovyClassLoader(Project.class.classLoader)
    classLoader.addURL(new File('build/classes/main').toURL())
    configurations.default.each { File file -> classLoader.addURL(file.toURL())}
    def taupCreate = classLoader.loadClass('edu.sc.seis.TauP.TauP_Create').newInstance()
    taupCreate.setDirectory(dir)
    taupCreate.setVelFileType('tvel')
    tvelModelNames.each { String model ->
        taupCreate.setModelFilename(model)
        taupCreate.loadVMod()
        taupCreate.createTauModel()
        taupCreate.getTauModel().writeModel(new File(dir+model+'.taup').path)
    }
    taupCreate.setVelFileType('nd')
    ndModelNames.each { String model ->
        taupCreate.setModelFilename(model)
        taupCreate.loadVMod()
        taupCreate.createTauModel()
        taupCreate.getTauModel().writeModel(new File(dir+model+'.taup').path)
    }
}
